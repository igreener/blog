<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://igreener.github.io</id>
    <title>unnull &apos;s blog</title>
    <updated>2020-03-17T12:05:20.752Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://igreener.github.io"/>
    <link rel="self" href="https://igreener.github.io/atom.xml"/>
    <logo>https://igreener.github.io/images/avatar.png</logo>
    <icon>https://igreener.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, unnull &apos;s blog</rights>
    <entry>
        <title type="html"><![CDATA[口讲=-=]]></title>
        <id>https://igreener.github.io/6G72BLri0/</id>
        <link href="https://igreener.github.io/6G72BLri0/">
        </link>
        <updated>2020-03-17T02:59:58.000Z</updated>
        <content type="html"><![CDATA[<p>写的不好见谅（手动狗头</p>
<hr>
<h2 id="2020316日可以算的上是写入教科书的一天">2020.3.16日<br>
可以算的上是写入教科书的一天</h2>
<p><strong>美国熔断历史上只发生过4次，最后一次熔断，还要追溯到2020年3月16日，那天我记忆很深刻，那感觉仿佛就在几天之前。--某网友</strong></p>
<hr>
<p>先普及一下基础知识:</p>
<ol>
<li>熔断机制（Circuit Breaker），也叫自动停盘机制，是指当股指波幅达到规定的熔断点时，交易所为控制风险采取的暂停交易措施。(指经济崩盘采取的应急措施，禁止股票交易，目的是抑制恐慌情绪的进一步扩大)</li>
<li>美国联邦储备系统（The Federal Reserve System），简称为美联储（The Fed），负责履行美国的中央银行的职责。(感觉上像是中国人民银行)</li>
</ol>
<hr>
<p>3月9日 美国历史第二次熔断 第一次被称为&quot;黑色星期一&quot;(3月16日也是星期一哎)<br>
3月12日 美国历史第三次熔断<br>
3月16日 美联储打算将利息下降至0% 美国历史第三次熔断<br>
利息下降至0%这是个什么操作?<br>
借用一句b站网友的话:<br>
<strong>阑尾手术住院，妈突然跟你说，孩子你想要啥妈给你买啥，然后把家里储蓄全倒你床上，还说不够我去借（负利率）这TM第一反应就是自己得绝症了吧。</strong><br>
美国人一听到这消息 心想:美国经济是要崩盘了吗  在加上前面两次熔断事件 急匆匆地把手里的股票卖了引发了第三次熔断==<br>
1987年美联储将利息下调了多次<br>
这次美联储将利息下调了两次就到0%了<br>
经济危机还没开始<br>
可美国已经将弹药打光了<br>
<s>(不愧是建国同志)</s></p>
<hr>
<p>回头看看这几次熔断的<strong>主要原因</strong>(瞎掰的):<br>
1. 美股股价过高 股价远大于市场价值 经济泡沫破裂(内在原因)<br>
2. 沙特阿拉伯一手骚操作 石油价格暴跌(导火线)<br>
3. 疫情的冲击<br>
<s>4. 川建国同志的推波助澜</s></p>
<hr>
<p>3月6日 沙特阿拉伯与俄罗斯谈判 要求限制石油产量来稳定石油价格<br>
俄罗斯因需要发展经济对抗疫情拒绝<br>
谈判破裂 价格战打响<br>
沙特一手降价<br>
可苦了世界上最大的页岩油出口国:美国<br>
美国经济直接拉跨<br>
这一波动荡 让美元的霸主地位岌岌可危<br>
<strong>我们是历史的见证者</strong><br>
<img src="https://igreener.github.io/post-images/1584416316055.png" alt="" loading="lazy"><br>
<s>瑞幸又可以讲新故事了</s></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[快速幂1]]></title>
        <id>https://igreener.github.io/kuai-su-mi/</id>
        <link href="https://igreener.github.io/kuai-su-mi/">
        </link>
        <updated>2020-03-02T02:42:54.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>前置知识<br>
一个十进制数可以转化成一个二进制数 如9 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 1001</li>
</ul>
<p>考虑一个问题<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">x^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>其中   <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><mi>x</mi><mo separator="true">,</mo><mi>n</mi><mo>&lt;</mo><msup><mn>2</mn><mn>31</mn></msup></mrow><annotation encoding="application/x-tex">0≤x,n&lt;2^{31}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>  答案对1e9+7取模</p>
<p>显然 直接乘的复杂度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">\Theta  (n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>的 不够优<br>
我们把n转化成二进制<br>
如16 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span> 10000<br>
可以发现<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>16</mn></msup></mrow><annotation encoding="application/x-tex">x^{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></span> = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>8</mn></msup></mrow><annotation encoding="application/x-tex">x^8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span>* <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>8</mn></msup></mrow><annotation encoding="application/x-tex">x^8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span> = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">x^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span> * <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">x^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span> * <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">x^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span> * <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">x^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span>=....<br>
发现有大量的需要重复计算的地方<br>
考虑优化<br>
从末尾开始,对于n的二进制下的每一个1,将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><msup><mn>2</mn><mrow><mi>l</mi><mi>e</mi><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></msup></mrow><annotation encoding="application/x-tex">x^{2^{len-1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.01192em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.01192em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285714em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>乘入答案,后将该位置的1变为0(其中len为从右往左数第一个1的位置)<br>
直到全为0为止</p>
<p>当然 在实现上是有点区别的</p>
<pre><code>#define ll long long
const int mod =1e9+7;
ll qpow(int x,int n)
{
       ll ans =1;
       ll t =x;//累乘器
       while(n)
       {
           if(n&amp;1)//该位有1
           ans = ans * t % mod  ;
           t =t * t % mod ;
           n = n / 2 ;
       }
       return ans ;
}
</code></pre>
<p>实际上，还有另一种做法:<br>
由于题目有对答案取模<br>
我们打表发现<br>
当n足够大时<br>
尾数会呈现周期性变化<br>
将周期省略，减少计算次数,复杂度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Θ</mi><mo>(</mo><mi mathvariant="normal">不</mi><mi mathvariant="normal">知</mi><mi mathvariant="normal">道</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">\Theta  (不知道)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Θ</span><span class="mopen">(</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">道</span><span class="mclose">)</span></span></span></span><br>
并不推荐这种写法，这种写法需要一些空间</p>
<pre><code>#define ll long long 
const int maxn=1e5+7;//看情况进行选择
const int mod =1e9+7;
int a[maxn];
ll qpow(int x,int n)
{
    memset(a,0,sizeof(a));
    a[1]=x%mod;
    a[2]=x%mod*x%mod;
    if(a[1]==a[2])return a[1];
    int cnt=2;
    while(1)
    {
        cnt++;
        a[cnt]=a[cnt-1]*x%mod;
        if(a[cnt]==a[1]){cnt--;break;}
    }
    n=n%cnt;
    return a[n];
}
</code></pre>
]]></content>
    </entry>
</feed>